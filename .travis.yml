sudo: false
language: java

before_install:

install: true

script:
  - wget -nv -O sdkperf-java-latest.zip https://products.solace.com/download/SDKPERF_JAVA
  - unzip sdkperf-java-latest.zip
  - SDKPERF_HOME=`ls -d sol-sdkperf-*`
  - CURRENT_HOME=`pwd`
  - CURENT_DATE=`date -Iseconds`
  - ./gradlew clean build tar
  - tar zxf build/distributions/sol-sdkperf-amqp-plugin-*.tgz --directory ${SDKPERF_HOME}/lib
  - rm ${SDKPERF_HOME}/lib/geronimo-jms_1.1_spec-1.1.1.*
  - rm ${SDKPERF_HOME}/lib/proton-j-*
  - echo "{\"name\":\"TestService-${CURENT_DATE}\",\"datacenterId\":\"aws-us-east-1b\",\"partitionId\":\"default\",\"servicePlanId\":\"enterprise-nano-plan\",\"adminState\":\"start\"}" > data.json
  - newBroker=`curl --request POST --url "https://console.solace.cloud/api/v0/services"  -H "Authorization:Bearer ${SOLACE_CLOUD_TOKEN}"  --header "Content-Type:application/json" --data @data.json`
  - serviceId=`jq '.data.serviceId' <<< $newBroker`
  - serviceId=${serviceId//\"}
  - while [ "\"completed\"" != "$(jq .data.adminProgress <<< `curl -H "Authorization:Bearer ${SOLACE_CLOUD_TOKEN}" --url "https://console.solace.cloud/api/v0/services/${serviceId}"`)"  ] ; do echo "`date` Waiting for service up"; sleep 5; done
  - serviceInfo=`curl -H "Authorization:Bearer ${SOLACE_CLOUD_TOKEN}" --url "https://console.solace.cloud/api/v0/services/${serviceId}"`
  - AMQP_URI=`jq .data.messagingProtocols[3].endPoints[0].uris[0] <<< $serviceInfo`
  - AMQP_URI=${AMQP_URI//\"}
  - USERNAME=`jq .data.messagingProtocols[3].username <<< $serviceInfo`
  - USERNAME=${USERNAME//\"}
  - PASSWORD=`jq .data.messagingProtocols[3].password <<< $serviceInfo`
  - PASSWORD=${PASSWORD//\"}
  - ${SDKPERF_HOME}/sdkperf_java.sh -api=thirdparty -ecc=com.solacesystems.pubsub.sdkperf.jms.amqp.AmqpJms_2_0_Client -cip=${AMQP_URI} -cu=${USERNAME} -cp=${PASSWORD} -sql=testQueue -pql=testQueue -mt=persistent -mr=50 -mn=1500 -msa=50 -oc -rc=-1 > test.result
  - cat test.result
  - grep "Messages received across all subscribers = 1500" test.result

after_success:
  - echo "Test Success - Branch( $TRAVIS_BRANCH ) Pull Request( $TRAVIS_PULL_REQUEST ) Tag( $TRAVIS_TAG )"

after_script:
 - curl --request DELETE --url "https://console.solace.cloud/api/v0/services/${serviceId}"  -H "Authorization:Bearer ${SOLACE_CLOUD_TOKEN}"  --header 'Content-Type:application/json'